{"version":3,"file":"minisnackbar.min.js","sources":["../src/index.js"],"sourcesContent":["class Snackbar {\r\n  static _queue = []\r\n  static _isShowing = false\r\n  static _currentTimeout = null\r\n  static _state = 'idle' // idle, showing, transitioning\r\n  static _currentActionHandler = null\r\n  static _transitionDuration = 250\r\n  static _initialized = false\r\n\r\n  static init(options = {}) {\r\n    if (this._initialized) return\r\n\r\n    if (typeof document === 'undefined' || !document.body) {\r\n      console.error('Snackbar: DOM is not available')\r\n      return\r\n    }\r\n\r\n    if (options.transitionDuration && typeof options.transitionDuration === 'number') {\r\n      this._transitionDuration = options.transitionDuration\r\n    }\r\n\r\n    if (document.getElementById('mini-snackbar')) {\r\n      this._initialized = true\r\n      return\r\n    }\r\n\r\n    if (!document.getElementById('mini-snackbar-styles')) {\r\n      const style = document.createElement('style')\r\n      style.id = 'mini-snackbar-styles'\r\n      style.textContent = `\r\n        .mini-snackbar {\r\n          /* Positioning */\r\n          position: fixed;\r\n          z-index: 1000;\r\n          left: 50%;\r\n          bottom: 30px;\r\n          transform: translateX(-50%) translateY(100%);\r\n          \r\n          /* Sizing */\r\n          min-width: 250px;\r\n          max-width: 90%;\r\n          \r\n          /* Layout */\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          gap: 8px;\r\n          padding: 0.875rem 1rem;\r\n          \r\n          /* Visibility */\r\n          visibility: hidden;\r\n          \r\n          /* Theming */\r\n          background-color: var(--mini-snackbar-bg, var(--md-sys-color-inverse-surface, rgba(255, 255, 255, 1)));\r\n          color: var(--mini-snackbar-text, var(--md-sys-color-inverse-on-surface, inherit));\r\n          border: var(--mini-snackbar-border, none);\r\n          font-family: var(--mini-snackbar-font-family, inherit);\r\n          font-size: 0.875rem;\r\n          text-align: left;\r\n          border-radius: var(--mini-snackbar-radius, 1rem);\r\n          box-shadow: var(--mini-snackbar-shadow, 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12));\r\n          \r\n          /* Animation */\r\n          transition: var(--mini-snackbar-transition, transform ${this._transitionDuration}ms ease-in-out);\r\n        }\r\n\r\n        .mini-snackbar.show {\r\n          visibility: visible;\r\n          transform: translateX(-50%) translateY(0);\r\n        }\r\n\r\n        /* Material Component Action Button */\r\n        .mini-snackbar .mini-snackbar-action {\r\n          flex-shrink: 0;\r\n          padding: 0.5rem 1rem;\r\n          margin: -0.5rem -0.5rem -0.5rem 0;\r\n        }\r\n\r\n        /* Fallback Action Button (when Material Components unavailable) */\r\n        .mini-snackbar md-text-button[data-fallback] {\r\n          display: inline-block;\r\n          flex-shrink: 0;\r\n          padding: 0.5rem 1rem;\r\n          margin: -0.5rem -0.5rem -0.5rem 0;\r\n          border: none;\r\n          background: var(--mini-snackbar-btn-bg, transparent);\r\n          font-size: inherit;\r\n          font-family: inherit;\r\n          font-weight: 500;\r\n          letter-spacing: 0.0892857143em;\r\n          text-transform: uppercase;\r\n          color: var(--mini-snackbar-btn-text, inherit);\r\n          cursor: pointer;\r\n          user-select: none;\r\n          border-radius: var(--mini-snackbar-btn-radius, 1rem);\r\n          transition: opacity 0.2s ease;\r\n        }\r\n\r\n        .mini-snackbar md-text-button[data-fallback]:hover {\r\n          opacity: var(--mini-snackbar-btn-hover-opacity, 0.8);\r\n          outline: var(--mini-snackbar-btn-hover-outline, 2px solid var(--mini-snackbar-btn-text, inherit));\r\n          outline-offset: var(--mini-snackbar-btn-outline-offset, 2px);\r\n          background-color: var(--mini-snackbar-btn-hover-bg, transparent);\r\n        }\r\n\r\n        .mini-snackbar md-text-button[data-fallback]:focus {\r\n          outline: var(--mini-snackbar-btn-focus-outline, 2px solid var(--mini-snackbar-btn-text, inherit));\r\n          outline-offset: var(--mini-snackbar-btn-outline-offset, 2px);\r\n        }\r\n\r\n        /* Mobile responsive */\r\n        @media (max-width: 600px) {\r\n          .mini-snackbar {\r\n            bottom: 90px;\r\n          }\r\n        }\r\n\r\n        /* Accessibility: Reduced motion */\r\n        @media (prefers-reduced-motion: reduce) {\r\n          .mini-snackbar {\r\n            transition: opacity 0.15s ease;\r\n          }\r\n        }\r\n      `\r\n      document.head.appendChild(style)\r\n    }\r\n\r\n    const snackbar = document.createElement('div')\r\n    snackbar.id = 'mini-snackbar'\r\n    snackbar.className = 'mini-snackbar'\r\n    snackbar.setAttribute('role', 'alert')\r\n    snackbar.setAttribute('aria-live', 'assertive')\r\n    snackbar.setAttribute('aria-atomic', 'true')\r\n\r\n    const snackbarText = document.createElement('span')\r\n    snackbarText.className = 'mini-snackbar-text'\r\n    snackbar.appendChild(snackbarText)\r\n\r\n    document.body.appendChild(snackbar)\r\n    this._initialized = true\r\n  }\r\n\r\n  static destroy() {\r\n    this.hideCurrent()\r\n    this.clearQueue()\r\n\r\n    const snackbar = document.getElementById('mini-snackbar')\r\n    if (snackbar) snackbar.remove()\r\n\r\n    const styles = document.getElementById('mini-snackbar-styles')\r\n    if (styles) styles.remove()\r\n\r\n    this._state = 'idle'\r\n    this._isShowing = false\r\n    this._currentActionHandler = null\r\n    this._currentTimeout = null\r\n    this._initialized = false\r\n  }\r\n\r\n  static getTransitionDuration() {\r\n    const snackbar = document.getElementById('mini-snackbar')\r\n    if (!snackbar) return this._transitionDuration\r\n\r\n    try {\r\n      const computedStyle = window.getComputedStyle(snackbar)\r\n      const duration = computedStyle.transitionDuration\r\n      if (duration && duration !== '0s') {\r\n        const value = parseFloat(duration)\r\n        return duration.includes('ms') ? value : value * 1000\r\n      }\r\n    } catch (e) {\r\n      console.warn('Snackbar: Could not read transition duration from CSS', e)\r\n    }\r\n\r\n    return this._transitionDuration\r\n  }\r\n\r\n  static add(message, action = null, duration = 3000) {\r\n    if (!this._initialized) {\r\n      console.warn('Snackbar: Not initialized. Call Snackbar.init() first.')\r\n      return\r\n    }\r\n\r\n    if (typeof message !== 'string' || message.trim() === '') {\r\n      console.warn('Snackbar: Message must be a non-empty string')\r\n      return\r\n    }\r\n    if (action !== null && (typeof action !== 'object' || typeof action.text !== 'string' || typeof action.handler !== 'function')) {\r\n      console.warn('Snackbar: Action must be an object with \"text\" (string) and \"handler\" (function) properties')\r\n      return\r\n    }\r\n    if (typeof duration !== 'number' || duration <= 0) {\r\n      console.warn('Snackbar: Duration must be a positive number')\r\n      return\r\n    }\r\n\r\n    this._queue.push({ message, action, duration })\r\n    if (this._state === 'idle') this.showNext()\r\n  }\r\n\r\n  static _cleanupAction() {\r\n    const snackbar = document.getElementById('mini-snackbar')\r\n    if (!snackbar) return\r\n\r\n    const actionButton = snackbar.querySelector('.mini-snackbar-action')\r\n    if (actionButton && this._currentActionHandler) {\r\n      actionButton.removeEventListener('click', this._currentActionHandler)\r\n      this._currentActionHandler = null\r\n      actionButton.remove()\r\n    }\r\n  }\r\n\r\n  static _showSnackbar(message, action, duration, onHide = null) {\r\n    const snackbar = document.getElementById('mini-snackbar')\r\n    if (!snackbar) {\r\n      console.error('Snackbar: Snackbar element not found. Ensure init() has been called.')\r\n      return\r\n    }\r\n\r\n    this._state = 'showing'\r\n    this._isShowing = true\r\n    const snackbarText = snackbar.querySelector('.mini-snackbar-text')\r\n    snackbarText.textContent = message\r\n\r\n    if (action) {\r\n      const actionButton = document.createElement('md-text-button')\r\n      actionButton.classList.add('mini-snackbar-action')\r\n\r\n      // Fallback for when Material Components are not available\r\n      if (customElements.get('md-text-button') === undefined) {\r\n        actionButton.setAttribute('data-fallback', '')\r\n      }\r\n\r\n      actionButton.textContent = action.text\r\n\r\n      this._currentActionHandler = () => {\r\n        action.handler()\r\n        this._hideSnackbar(onHide)\r\n      }\r\n\r\n      actionButton.addEventListener('click', this._currentActionHandler)\r\n      snackbar.appendChild(actionButton)\r\n    }\r\n\r\n    snackbar.classList.add('show')\r\n\r\n    this._currentTimeout = setTimeout(() => {\r\n      this._hideSnackbar(onHide)\r\n    }, duration)\r\n  }\r\n\r\n  static _hideSnackbar(onHide = null) {\r\n    if (this._currentTimeout) {\r\n      clearTimeout(this._currentTimeout)\r\n      this._currentTimeout = null\r\n    }\r\n\r\n    this._state = 'transitioning'\r\n    const snackbar = document.getElementById('mini-snackbar')\r\n    if (snackbar) {\r\n      snackbar.classList.remove('show')\r\n    }\r\n\r\n    this._cleanupAction()\r\n\r\n    // Wait for CSS transition to complete\r\n    const transitionDuration = this.getTransitionDuration()\r\n    setTimeout(() => {\r\n      this._isShowing = false\r\n      this._state = 'idle'\r\n      if (onHide) onHide()\r\n    }, transitionDuration)\r\n  }\r\n\r\n  static show(message, action = null, duration = 3000) {\r\n    if (!this._initialized) {\r\n      console.warn('Snackbar: Not initialized. Call Snackbar.init() first.')\r\n      return\r\n    }\r\n\r\n    if (typeof message !== 'string' || message.trim() === '') {\r\n      console.warn('Snackbar: Message must be a non-empty string')\r\n      return\r\n    }\r\n    if (action !== null && (typeof action !== 'object' || typeof action.text !== 'string' || typeof action.handler !== 'function')) {\r\n      console.warn('Snackbar: Action must be an object with \"text\" (string) and \"handler\" (function) properties')\r\n      return\r\n    }\r\n    if (typeof duration !== 'number' || duration <= 0) {\r\n      console.warn('Snackbar: Duration must be a positive number')\r\n      return\r\n    }\r\n\r\n    // Queue message if currently transitioning\r\n    if (this._state === 'transitioning') {\r\n      this.add(message, action, duration)\r\n      return\r\n    }\r\n\r\n    // Interrupt current snackbar if showing\r\n    if (this._isShowing) {\r\n      this._state = 'transitioning'\r\n      if (this._currentTimeout) {\r\n        clearTimeout(this._currentTimeout)\r\n        this._currentTimeout = null\r\n      }\r\n      const snackbar = document.getElementById('mini-snackbar')\r\n      if (snackbar) {\r\n        snackbar.classList.remove('show')\r\n      }\r\n      this._cleanupAction()\r\n\r\n      const transitionDuration = this.getTransitionDuration()\r\n      setTimeout(() => {\r\n        this._isShowing = false\r\n        this._state = 'idle'\r\n        this._showSnackbar(message, action, duration)\r\n      }, transitionDuration)\r\n    } else {\r\n      this._showSnackbar(message, action, duration)\r\n    }\r\n  }\r\n\r\n  static showNext() {\r\n    if (this._queue.length === 0) {\r\n      this._isShowing = false\r\n      this._state = 'idle'\r\n      return\r\n    }\r\n\r\n    const { message, action, duration } = this._queue.shift()\r\n    this._showSnackbar(message, action, duration, () => {\r\n      setTimeout(() => this.showNext(), 200)\r\n    })\r\n  }\r\n\r\n  static clearQueue() {\r\n    this._queue = []\r\n  }\r\n\r\n  static hideCurrent() {\r\n    if (this._isShowing && this._state !== 'transitioning') {\r\n      this._hideSnackbar()\r\n    }\r\n  }\r\n\r\n  static isInitialized() {\r\n    return this._initialized\r\n  }\r\n\r\n  // Getters/setters for testing\r\n  static get queue() { return this._queue }\r\n  static set queue(value) { this._queue = value }\r\n  static get isShowing() { return this._isShowing }\r\n  static set isShowing(value) { this._isShowing = value }\r\n  static get currentTimeout() { return this._currentTimeout }\r\n  static set currentTimeout(value) { this._currentTimeout = value }\r\n  static get state() { return this._state }\r\n  static set state(value) { this._state = value }\r\n}\r\n\r\n// Module exports\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = Snackbar\r\n}\r\n\r\n// Make available globally in browser\r\nif (typeof window !== 'undefined') {\r\n  window.Snackbar = Snackbar\r\n}\r\n\r\n/**\r\n * Usage Examples:\r\n * \r\n * // Initialize (required)\r\n * Snackbar.init(); // or Snackbar.init({ transitionDuration: 300 });\r\n * \r\n * // Queue messages\r\n * Snackbar.add('Message sent successfully');\r\n * Snackbar.add('Item deleted', { text: 'UNDO', handler: () => console.log('Undo') });\r\n * Snackbar.add('Custom duration', null, 5000);\r\n * \r\n * // Show immediately (interrupts current)\r\n * Snackbar.show('Urgent message');\r\n * Snackbar.show('Item deleted', { text: 'UNDO', handler: () => console.log('Undo') });\r\n * \r\n * // Cleanup\r\n * Snackbar.destroy();\r\n */"],"names":["Snackbar","static","init","options","this","_initialized","document","body","console","error","transitionDuration","_transitionDuration","getElementById","style","createElement","id","textContent","head","appendChild","snackbar","className","setAttribute","snackbarText","destroy","hideCurrent","clearQueue","remove","styles","_state","_isShowing","_currentActionHandler","_currentTimeout","getTransitionDuration","duration","window","getComputedStyle","value","parseFloat","includes","e","warn","add","message","action","trim","text","handler","_queue","push","showNext","_cleanupAction","actionButton","querySelector","removeEventListener","_showSnackbar","onHide","classList","undefined","customElements","get","_hideSnackbar","addEventListener","setTimeout","clearTimeout","show","length","shift","isInitialized","queue","isShowing","currentTimeout","state","module","exports"],"mappings":"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"}